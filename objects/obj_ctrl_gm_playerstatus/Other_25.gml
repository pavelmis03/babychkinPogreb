/// @description действия 

/*возможные ситуации
1. пришли в комнату, здесь есть игрок, есть информация о его местоположении - пришли сюда, изменили положение по сохраненной информации
2. пришли в комнату, здесь есть игрок, но нет никакой информации о нем - в степе создалю ячейку в словаре информации, пришли сюда, изменили положение по сохраненной информации (по сути его положение не изменится в этом случае)
3. пришли в комнату, игрока нет, но есть информация о нем - создаем игрока по информации в нужном месте
4. пришли в комнату, игрока нет, информации тоже нет - такая ситуцаия возможна только если нас перекинул треггер-телепорт

это все для больших локаций, где локация разбита на несколько комнат
при перемещении триггерами-телепортами, идея такая: перед перемещением они удаляют ячейку словаря контроллера персонажа
с информацией об этой комнате, чтобы вернуться можно было только по другому триггеру-телепорту
*/

switch (action) {
	//действия при смене комнаты
	case "changeRm":	//создаем игрока в новой комнате
		//["Офис Леонида", obj_player_FP, ...] 
		//проверка на существование ключей в степ: при отсутствии ключа CONST_MAP_RM_INFO не будет назначен action
		//если нет ключа player_map_info, в степ он будет создан по умолчанию до UE15
		var arr = global.CONST_MAP_RM_INFO[?room];			//получаем массив инфы о комнате
		if (scr_arr_fingEl(player_arr, arr[1], 1) != -1) {	//проверяем, что в этой комнате должен быть игрок
			//игрок создается в комнате, если он здесь нужен, но его нет
			if (!instance_exists(arr[1])) {				//проверяем, что игрока нет
				if (ds_map_exists(player_map_info, room)) {	//если есть запись об игроке в этом месте
					var t = player_map_info[?room];				//информация об игроке
					var obj = instance_create_depth(t[0], t[1], t[2], arr[1]);	//создаем игрока
					obj.persistent = false;	//при переходах по комнатам-частям локаций перс временно делается
						//постоянным в контроллере триггера, чтобы он сохранил значения переменных, нужно убирать эту постоянность после перехода
				} else {
					//создаем игрока по координатам, указанным триггером-телепортом
					var obj = instance_create_depth(player_creationX, player_creationY, player_creationDepth, arr[1]);
					//obj.persistent = false;	не нужно, т.к. по умолчанию непостоянный
				}
			} else {
				//если мы, как постоянный персонаж, переходим в комнату, там будет наш близнец непостоянный, его нужно убрать
				if (instance_number(arr[1]) > 1) {	//если игроков больше одного
					for (var i = 0; i < instance_number(arr[1]); i++) {	
						var tobj = instance_find(arr[1], i);
						if (tobj.persistent == 0) { //найден наш непостоянный коллега
							instance_destroy(tobj);
							i--;
						}
					}
				}
				var t = player_map_info[?room];				//информация об игроке
				arr[1].x = t[0];	//переносим игрока в сохраненные координаты
				arr[1].y = t[1];
				arr[1].depth = t[2];
				arr[1].persistent = false;	//при переходах по комнатам-частям локаций перс временно делается
						//постоянным в контроллере триггера, чтобы он сохранил значения переменных, нужно убирать эту постоянность после перехода
			}
		}
	break;
}
